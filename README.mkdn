# NAME

Text::Pipe::Translate - Translate text from one language to another

# SYNOPSIS

    use Text::Pipe 'PIPE';
    my $pipe = PIPE 'Translate::Babelfish', from => 'en', to => 'de';
    my $german = $pipe->filter('My hovercraft is full of eels.'),

# DESCRIPTION

This pipe segment can translate text from one language to another. To do so it
uses [Lingua::Translate](http://search.cpan.org/search?mode=module&query=Lingua::Translate).

Both source and destination language are to be given in RFC3066 form. See
[I18N::LangTags](http://search.cpan.org/search?mode=module&query=I18N::LangTags).

# METHODS

- `clear_from`

    $obj->clear_from;

Clears the value.

- `clear_to`

    $obj->clear_to;

Clears the value.

- `clear_translators`

    $obj->clear_translators;

Clears the value.

- `from`

    my $value = $obj->from;
    $obj->from($value);

A basic getter/setter method. If called without an argument, it returns the
value. If called with a single argument, it sets the value.

- `from_clear`

    $obj->from_clear;

Clears the value.

- `to`

    my $value = $obj->to;
    $obj->to($value);

A basic getter/setter method. If called without an argument, it returns the
value. If called with a single argument, it sets the value.

- `to_clear`

    $obj->to_clear;

Clears the value.

- `translators`

    my $value = $obj->translators;
    $obj->translators($value);

A basic getter/setter method. If called without an argument, it returns the
value. If called with a single argument, it sets the value.

- `translators_clear`

    $obj->translators_clear;

Clears the value.

- `get_translator`

Constructs a translator object for the current settings of `from()` and
`to()` and caches it using the `translators()` accessor.

- `filter_single`

Takes a string and translates it according to the current settings of
`from()` and `to()`.

Text::Pipe::Translate inherits from [Text::Pipe::Base](http://search.cpan.org/search?mode=module&query=Text::Pipe::Base).

The superclass [Text::Pipe::Base](http://search.cpan.org/search?mode=module&query=Text::Pipe::Base) defines these methods and functions:

    new(), bit_or(), filter(), init()

The superclass [Class::Accessor::Complex](http://search.cpan.org/search?mode=module&query=Class::Accessor::Complex) defines these methods and
functions:

    mk_abstract_accessors(), mk_array_accessors(), mk_boolean_accessors(),
    mk_class_array_accessors(), mk_class_hash_accessors(),
    mk_class_scalar_accessors(), mk_concat_accessors(),
    mk_forward_accessors(), mk_hash_accessors(), mk_integer_accessors(),
    mk_new(), mk_object_accessors(), mk_scalar_accessors(),
    mk_set_accessors(), mk_singleton()

The superclass [Class::Accessor](http://search.cpan.org/search?mode=module&query=Class::Accessor) defines these methods and functions:

    _carp(), _croak(), _mk_accessors(), accessor_name_for(),
    best_practice_accessor_name_for(), best_practice_mutator_name_for(),
    follow_best_practice(), get(), make_accessor(), make_ro_accessor(),
    make_wo_accessor(), mk_accessors(), mk_ro_accessors(),
    mk_wo_accessors(), mutator_name_for(), set()

The superclass [Class::Accessor::Installer](http://search.cpan.org/search?mode=module&query=Class::Accessor::Installer) defines these methods and
functions:

    install_accessor()

The superclass [Class::Accessor::Constructor](http://search.cpan.org/search?mode=module&query=Class::Accessor::Constructor) defines these methods and
functions:

    _make_constructor(), mk_constructor(), mk_constructor_with_dirty(),
    mk_singleton_constructor()

The superclass [Data::Inherited](http://search.cpan.org/search?mode=module&query=Data::Inherited) defines these methods and functions:

    every_hash(), every_list(), flush_every_cache_by_key()

The superclass [Class::Accessor::Constructor::Base](http://search.cpan.org/search?mode=module&query=Class::Accessor::Constructor::Base) defines these methods
and functions:

    STORE(), clear_dirty(), clear_hygienic(), clear_unhygienic(),
    contains_hygienic(), contains_unhygienic(), delete_hygienic(),
    delete_unhygienic(), dirty(), dirty_clear(), dirty_set(),
    elements_hygienic(), elements_unhygienic(), hygienic(),
    hygienic_clear(), hygienic_contains(), hygienic_delete(),
    hygienic_elements(), hygienic_insert(), hygienic_is_empty(),
    hygienic_size(), insert_hygienic(), insert_unhygienic(),
    is_empty_hygienic(), is_empty_unhygienic(), set_dirty(),
    size_hygienic(), size_unhygienic(), unhygienic(), unhygienic_clear(),
    unhygienic_contains(), unhygienic_delete(), unhygienic_elements(),
    unhygienic_insert(), unhygienic_is_empty(), unhygienic_size()

The superclass [Tie::StdHash](http://search.cpan.org/search?mode=module&query=Tie::StdHash) defines these methods and functions:

    CLEAR(), DELETE(), EXISTS(), FETCH(), FIRSTKEY(), NEXTKEY(), SCALAR(),
    TIEHASH()

# BUGS AND LIMITATIONS

No bugs have been reported.

Please report any bugs or feature requests through the web interface at
<http://rt.cpan.org>.

# INSTALLATION

See perlmodinstall for information and options on installing Perl modules.

# AVAILABILITY

The latest version of this module is available from the Comprehensive Perl
Archive Network (CPAN). Visit <http://www.perl.com/CPAN/> to find a CPAN
site near you. Or see <http://search.cpan.org/dist/Text-Pipe-Translate/>.

# AUTHORS

Marcel Gr&uuml;nauer, `<marcel@cpan.org>`

# COPYRIGHT AND LICENSE

Copyright 2007-2009 by the authors.

This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.

